name: CI/CD production

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 13.x
      uses: actions/setup-node@v2
      with:
        node-version: 13.x
    - run: npm install
    - run: npm install --save jest
    - run: npm test
  docker:
    needs: integration 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile: ['auth', 'gateway', 'spaces', 'groups', 'users']
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          file: ./microservices/${{ matrix.dockerfile }}/Dockerfile
          tags: dadebulba/apiatori-${{ matrix.dockerfile}}
  deployment:
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: update terraform deployment in master
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd ./APIatori
          git pull origin master
          cd ./deployment/production
          terraform destroy -auto-approve
          terraform apply -auto-approve
